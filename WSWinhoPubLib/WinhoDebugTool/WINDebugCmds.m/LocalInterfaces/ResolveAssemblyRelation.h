// COPYRIGHT 上海文颢信息技术有限公司 2018
//===================================================================
//
// ResolveAssemblyRelation.h
// Header definition of ResolveAssemblyRelation
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//
//  Apr 2018  Creation: Code generated by the CAA wizard  Administrator
//===================================================================
#ifndef ResolveAssemblyRelation_H
#define ResolveAssemblyRelation_H

#include "CATBaseUnknown.h"
#include "CATUnicodeString.h"
#include "CATIProduct.h"
#include "CATISpecObject.h"
#include "CATLISTV_CATISpecObject.h"
#include "CATUnicodeString.h"
#include "CATListOfCATUnicodeString.h"
#include "CATMathPoint.h"
#include "CATBaseUnknown.h"
#include "CATBaseUnknown.h"
#include "CATBaseUnknown.h"

#include <vector>
using std::vector;

#define ParamNameInfoCount 2
#define ParamValueInfoCount 4

class ProductInfo
{
public:

	//三维文件信息
	CATIProduct_var Product;
	CATIProduct_var FatherInstPro;

	//PARTVERSION信息
	CATUnicodeString PVID;
	CATUnicodeString DPID;
	CATUnicodeString PARTTYPE;
	CATUnicodeString PARTNUM;
	CATUnicodeString PARTVER;
	CATUnicodeString SOURCE;
	CATUnicodeString PROID;
	CATUnicodeString ITERATIONID;
	CATUnicodeString VERSIONLEVEL;
	CATUnicodeString SERIES;
	CATUnicodeString VERSIONPOSITION;
	CATUnicodeString ITERATIONSERIES;
	CATUnicodeString ITERATIONPOSITION;

	//DOCUMENT信息
	CATUnicodeString DOCID;
	CATUnicodeString LWFILENAME;
	CATUnicodeString EPMFILENAME;
	CATUnicodeString ITERATION;
	CATUnicodeString EPMVERSION;
	CATUnicodeString EPMITERATION;
	CATUnicodeString EPMFILEPATH;
	CATUnicodeString SECRET;
	CATUnicodeString DSGFILEMD5;
	CATUnicodeString DSGLCAVAULTURL;
	CATUnicodeString LWVAULTURL;
	CATUnicodeString LWFILEMD5;
	CATUnicodeString DSGFILESUFFIX;
	CATUnicodeString LWFILESUFFIX;
	CATUnicodeString DOCVERISON;

	//ASSEMBLYRELATION
	CATUnicodeString ARID;
	CATUnicodeString INSTNUM;
	CATUnicodeString PARENTID;
	CATUnicodeString LINKEDID;
	int ORDE;
	double VMATRIX01;
	double VMATRIX02;
	double VMATRIX03;
	double VMATRIX04;
	double VMATRIX05;
	double VMATRIX06;
	double VMATRIX07;
	double VMATRIX08;
	double VMATRIX09;
	double VMATRIX10;
	double VMATRIX11;
	double VMATRIX12;

	//BOM信息
	CATUnicodeString BOMID;             
	CATUnicodeString FATHERID;   
	CATUnicodeString TYPE;
	CATUnicodeString PROCESSROUTE;  
	CATUnicodeString USECOMPANY;    
	CATUnicodeString TREEPATH;      
	CATUnicodeString INSTSOURCE;     
	CATUnicodeString ISSUECOMPANY2; 
	CATUnicodeString AUXCOMPANY;   
	CATUnicodeString AUXPROCESSROUTE;
	CATUnicodeString BROUGHT;       
	CATUnicodeString PROCMARK;          
	CATUnicodeString PBOMOWNER;     
	CATUnicodeString DATASTATE;    
	CATUnicodeString STATE;     
	CATUnicodeString STDID;         
	CATUnicodeString INTEGRITY;    
	CATUnicodeString PCID;        
	CATUnicodeString ISVALID;      
	CATUnicodeString ORDERNUM;     
	CATUnicodeString ISREVOKE;

	//NOTE信息
	CATUnicodeString NOTETREEPATH;
	CATUnicodeString LINENAME;
	CATUnicodeString LINETAG;
	CATUnicodeString STARTX;
	CATUnicodeString STARTY;
	CATUnicodeString STARTZ;
	CATUnicodeString ENDX;
	CATUnicodeString ENDY;
	CATUnicodeString ENDZ;
	CATUnicodeString STDPARTNUM;
	CATUnicodeString STDPARTNAME;
	CATUnicodeString STDINSTNUM;
	CATUnicodeString WEIGHT;

	//NOTE注信息
	CATUnicodeString ANNOTATEID;
	CATUnicodeString PARAMNAME;
	CATUnicodeString PARAMVALUE;

	ProductInfo()
	{
		//三维文件信息
		Product = NULL_var;
		FatherInstPro = NULL_var;

		//PARTVERSION信息
		PVID = CATUnicodeString("");
		DPID = CATUnicodeString("");
		PARTTYPE = CATUnicodeString("");
		PARTNUM = CATUnicodeString("");
		PARTVER = CATUnicodeString("");
		SOURCE = CATUnicodeString("");
		PROID = CATUnicodeString("");
		ITERATIONID = CATUnicodeString("");
		VERSIONLEVEL = CATUnicodeString("");
		SERIES = CATUnicodeString("");
		VERSIONPOSITION = CATUnicodeString("");
		ITERATIONSERIES = CATUnicodeString("");
		ITERATIONPOSITION = CATUnicodeString("");

		//DOCUMENT信息
		DOCID = CATUnicodeString("");
		LWFILENAME = CATUnicodeString("");
		EPMFILENAME = CATUnicodeString("");
		ITERATION = CATUnicodeString("");
		EPMVERSION = CATUnicodeString("");
		EPMITERATION = CATUnicodeString("");
		EPMFILEPATH = CATUnicodeString("");
		SECRET = CATUnicodeString("");
		DSGFILEMD5 = CATUnicodeString("");
		DSGLCAVAULTURL = CATUnicodeString("");
		LWVAULTURL = CATUnicodeString("");
		LWFILEMD5 = CATUnicodeString("");
		DSGFILESUFFIX = CATUnicodeString("");
		LWFILESUFFIX = CATUnicodeString("");
		DOCVERISON = CATUnicodeString("");

		//ASSEMBLYRELATION
		ARID = CATUnicodeString("");
		INSTNUM = CATUnicodeString("");
		PARENTID = CATUnicodeString("");
		LINKEDID = CATUnicodeString("");
		ORDE = 0;
		VMATRIX01 = double(1);
		VMATRIX02 = double(0);
		VMATRIX03 = double(0);
		VMATRIX04 = double(0);
		VMATRIX05 = double(1);
		VMATRIX06 = double(0);
		VMATRIX07 = double(0);
		VMATRIX08 = double(0);
		VMATRIX09 = double(1);
		VMATRIX10 = double(0);
		VMATRIX11 = double(0);
		VMATRIX12 = double(0);

		//BOM信息
		BOMID = CATUnicodeString("");             
		FATHERID = CATUnicodeString("");   
		TYPE = CATUnicodeString("");
		PROCESSROUTE = CATUnicodeString("");  
		USECOMPANY = CATUnicodeString("");    
		TREEPATH = CATUnicodeString("");      
		INSTSOURCE = CATUnicodeString("");     
		ISSUECOMPANY2 = CATUnicodeString(""); 
		AUXCOMPANY = CATUnicodeString("");   
		AUXPROCESSROUTE = CATUnicodeString("");
		BROUGHT = CATUnicodeString("");       
		PROCMARK = CATUnicodeString("");          
		PBOMOWNER = CATUnicodeString("");     
		DATASTATE = CATUnicodeString("");    
		STATE = CATUnicodeString("");     
		STDID = CATUnicodeString("");         
		INTEGRITY = CATUnicodeString("");    
		PCID = CATUnicodeString("");        
		ISVALID = CATUnicodeString("");      
		ORDERNUM = CATUnicodeString("");     
		ISREVOKE = CATUnicodeString("");

		//NOTE信息
		NOTETREEPATH = CATUnicodeString("");
		LINENAME = CATUnicodeString("");
		LINETAG = CATUnicodeString("");
		STARTX = CATUnicodeString("");
		STARTY = CATUnicodeString("");
		STARTZ = CATUnicodeString("");
		ENDX = CATUnicodeString("");
		ENDY = CATUnicodeString("");
		ENDZ = CATUnicodeString("");
		STDPARTNUM = CATUnicodeString("");
		STDPARTNAME = CATUnicodeString("");
		STDINSTNUM = CATUnicodeString("");
		WEIGHT = CATUnicodeString("");

		//NOTE注信息
		ANNOTATEID = CATUnicodeString("");
		PARAMNAME = CATUnicodeString("");
		PARAMVALUE = CATUnicodeString("");
	}

	~ProductInfo()
	{
		//三维文件信息
		Product = NULL_var;
		FatherInstPro = NULL_var;

		//PARTVERSION信息
		PVID = CATUnicodeString("");
		DPID = CATUnicodeString("");
		PARTTYPE = CATUnicodeString("");
		PARTNUM = CATUnicodeString("");
		PARTVER = CATUnicodeString("");
		SOURCE = CATUnicodeString("");
		PROID = CATUnicodeString("");
		ITERATIONID = CATUnicodeString("");
		VERSIONLEVEL = CATUnicodeString("");
		SERIES = CATUnicodeString("");
		VERSIONPOSITION = CATUnicodeString("");
		ITERATIONSERIES = CATUnicodeString("");
		ITERATIONPOSITION = CATUnicodeString("");

		//DOCUMENT信息
		DOCID = CATUnicodeString("");
		LWFILENAME = CATUnicodeString("");
		EPMFILENAME = CATUnicodeString("");
		ITERATION = CATUnicodeString("");
		EPMVERSION = CATUnicodeString("");
		EPMITERATION = CATUnicodeString("");
		EPMFILEPATH = CATUnicodeString("");
		SECRET = CATUnicodeString("");
		DSGFILEMD5 = CATUnicodeString("");
		DSGLCAVAULTURL = CATUnicodeString("");
		LWVAULTURL = CATUnicodeString("");
		LWFILEMD5 = CATUnicodeString("");
		DSGFILESUFFIX = CATUnicodeString("");
		LWFILESUFFIX = CATUnicodeString("");
		DOCVERISON = CATUnicodeString("");

		//ASSEMBLYRELATION
		ARID = CATUnicodeString("");
		INSTNUM = CATUnicodeString("");
		PARENTID = CATUnicodeString("");
		LINKEDID = CATUnicodeString("");
		ORDE = 0;
		VMATRIX01 = double(1);
		VMATRIX02 = double(0);
		VMATRIX03 = double(0);
		VMATRIX04 = double(0);
		VMATRIX05 = double(1);
		VMATRIX06 = double(0);
		VMATRIX07 = double(0);
		VMATRIX08 = double(0);
		VMATRIX09 = double(1);
		VMATRIX10 = double(0);
		VMATRIX11 = double(0);
		VMATRIX12 = double(0);

		//BOM信息
		BOMID = CATUnicodeString("");             
		FATHERID = CATUnicodeString("");   
		TYPE = CATUnicodeString("");
		PROCESSROUTE = CATUnicodeString("");  
		USECOMPANY = CATUnicodeString("");    
		TREEPATH = CATUnicodeString("");      
		INSTSOURCE = CATUnicodeString("");     
		ISSUECOMPANY2 = CATUnicodeString(""); 
		AUXCOMPANY = CATUnicodeString("");   
		AUXPROCESSROUTE = CATUnicodeString("");
		BROUGHT = CATUnicodeString("");       
		PROCMARK = CATUnicodeString("");          
		PBOMOWNER = CATUnicodeString("");     
		DATASTATE = CATUnicodeString("");    
		STATE = CATUnicodeString("");     
		STDID = CATUnicodeString("");         
		INTEGRITY = CATUnicodeString("");    
		PCID = CATUnicodeString("");        
		ISVALID = CATUnicodeString("");      
		ORDERNUM = CATUnicodeString("");     
		ISREVOKE = CATUnicodeString("");

		//NOTE信息
		NOTETREEPATH = CATUnicodeString("");
		LINENAME = CATUnicodeString("");
		LINETAG = CATUnicodeString("");
		STARTX = CATUnicodeString("");
		STARTY = CATUnicodeString("");
		STARTZ = CATUnicodeString("");
		ENDX = CATUnicodeString("");
		ENDY = CATUnicodeString("");
		ENDZ = CATUnicodeString("");
		STDPARTNUM = CATUnicodeString("");
		STDPARTNAME = CATUnicodeString("");
		STDINSTNUM = CATUnicodeString("");
		WEIGHT = CATUnicodeString("");

		//NOTE注信息
		ANNOTATEID = CATUnicodeString("");
		PARAMNAME = CATUnicodeString("");
		PARAMVALUE = CATUnicodeString("");

	}
};

class STDInfo
{
public:
	CATUnicodeString STDPrtNum;							//标准件图号HB8020-8X20：参数对象名称第一段或参数对象取值中第二段，可以校验是否一致
	CATUnicodeString STDPrtName;						//标准件名称，参数对象取值中第三段
	CATUnicodeString STDInstNum;						//标准件实例号 = 参数对象名称去掉“|”
	int Amount;											//标准件数量，参数对象取值中第一段
	CATUnicodeString Weight;							//标准件单个重量，参数对象取值中第四段

	STDInfo()
	{
		STDPrtNum = NULL;
		STDPrtName = NULL;
		STDInstNum = NULL;
		Amount = 0;
		Weight=NULL;

	};
	~STDInfo()
	{
		STDPrtNum = NULL;
		STDPrtName = NULL;
		STDInstNum = NULL;
		Amount = 0;
		Weight = NULL;
	};

};
class LineInfo
{
public:
	CATISpecObject_var LineObj;							//矢量线对象
	CATMathPoint StartPt;								//矢量线起点
	CATMathPoint EndPt;									//矢量线终点
	CATUnicodeString LinePath;							//矢量线在结构树中的路径
	CATUnicodeString LineTag;							//矢量线对应拓扑表达Tag标记
	CATLISTV(CATUnicodeString) STDDBIDList;				//矢量线对应标准件在数据库中的ID信息

	LineInfo()
	{
		LineObj = NULL_var;
		StartPt = NULL;
		LinePath = NULL;
		LineTag = NULL;
		EndPt = NULL;
		STDDBIDList=NULL;
	};
	~LineInfo()
	{
		LineObj = NULL_var;
		StartPt = NULL;
		EndPt = NULL;
		LinePath = NULL;
		LineTag = NULL;
		STDDBIDList=NULL;
	};

};

class ParamInfo
{
public:
	CATUnicodeString HoleClaim;						//制孔要求
	CATUnicodeString LinkedParts;					//连接夹层链表
	ParamInfo()
	{
		HoleClaim = NULL;
		LinkedParts = NULL;
	}
	~ParamInfo()
	{
		HoleClaim = NULL;
		LinkedParts = NULL;
	}

};

class PtAndLineGSInfo
{
public:
	CATISpecObject_var PtAndLineGS;						//点线集几何图形集对象
	CATISpecObject_var FatherGS;						//父节点几何图形集对象
	CATISpecObject_var PtGS;							//子级钉孔点几何图形集对象
	CATISpecObject_var LineGS;							//子级矢量线几何图形集对象


	CATLISTV(CATISpecObject_var) STDParamObjList;		//点线集下“标准件”参数集中的参数对象
	vector<STDInfo> STDInfoVector;						//每一个参数对象解析产生的信息，与STDParamObjList的大小一致，一一对应。			   

	ParamInfo Param_Info;							    //参数信息，目前为“制孔要求”和“连接夹层”

	CATLISTV(CATISpecObject_var) PtObjList;				//钉孔点几何图形集下的子级点对象
	vector<CATMathPoint> PtVector;						//钉孔点对象对应的坐标点

	vector<LineInfo> LineInfoVector;					//矢量线对象信息

	PtAndLineGSInfo()
	{
		PtAndLineGS = NULL_var;
		FatherGS = NULL_var;
		PtGS = NULL_var;
		LineGS=NULL_var;

		STDParamObjList = NULL;
		STDInfoVector.empty();

		PtObjList = NULL;
		PtVector.empty();

		LineInfoVector.empty();
	};
	~PtAndLineGSInfo()
	{
		PtAndLineGS = NULL_var;
		FatherGS = NULL_var;
		PtGS = NULL_var;
		LineGS=NULL_var;

		STDParamObjList = NULL;
		STDInfoVector.empty();

		PtObjList = NULL;
		PtVector.empty();

		LineInfoVector.empty();
	};
};

class NoteAnnotate
{
public:
	CATISpecObject_var AnnotateGS;					//"注"几何图形集
	CATLISTV(CATISpecObject_var) ParamObjList;		//参数对象链表，与ParamValueList和ParamDBIDList一一对应
	CATLISTV(CATUnicodeString) ParamValueList;		//参数取值链表，与ParamObjList和ParamDBIDList一一对应
	CATLISTV(CATUnicodeString) ParamDBIDList;		//数据库记录ID链表，与ParamObjList和ParamValueList一一对应

	NoteAnnotate()
	{
		AnnotateGS = NULL_var;
		ParamObjList = NULL;
		ParamValueList = NULL;
		ParamDBIDList = NULL;
	};
	~NoteAnnotate()
	{
		AnnotateGS = NULL_var;
		ParamObjList = NULL;
		ParamValueList = NULL;
		ParamDBIDList = NULL;
	};
};

class SACNoteInfo
{
public:

	CATUnicodeString DocStorageName;					//Note文件全路径

	CATBoolean IsSymmetricalNote;						//是否是对称Note
	CATUnicodeString SymmetricalPrtNum;					//对称信息

	NoteAnnotate Note_Annotate;							//注释注解信息

	CATISpecObject_var STDAndHoleGS;					//"标准件及钉孔"几何图形集
	vector<PtAndLineGSInfo> PtAndLineGSInfoVector;		//点线集信息


	SACNoteInfo()
	{
		DocStorageName = CATUnicodeString("");
		IsSymmetricalNote = FALSE;
		SymmetricalPrtNum = CATUnicodeString("");
		STDAndHoleGS = NULL_var;
		PtAndLineGSInfoVector.empty();
	};
	~SACNoteInfo()
	{
		DocStorageName = CATUnicodeString("");
		IsSymmetricalNote = FALSE;
		SymmetricalPrtNum = CATUnicodeString("");
		STDAndHoleGS = NULL_var;
		PtAndLineGSInfoVector.empty();
	};
};

//-----------------------------------------------------------------------

/**
* Class representing xxx.
*
* <br><b>Role</b>: Provide the basic class function...
* <p>
* Do not use the @href ResolveAssemblyRelation constructor to
* do such and such but instead...
*
* @example
*  // example is optional
*  pObject = new ResolveAssemblyRelation;
*  pObject->SetXXX(...);
*
* @href ClassReference, Class#MethodReference, #InternalMethod...
*/
class ResolveAssemblyRelation: public CATBaseUnknown
{
  CATDeclareClass;

  public:

	  // Standard constructors and destructors
	  // -------------------------------------
		 ResolveAssemblyRelation ();
		 virtual ~ResolveAssemblyRelation ();

	  // Copy constructor and equal operator
	  // -----------------------------------
	  ResolveAssemblyRelation (ResolveAssemblyRelation &);
	  ResolveAssemblyRelation& operator=(ResolveAssemblyRelation&);

	  //static HRESULT ResolveAssemblyRelationFromDP(CATUnicodeString istrDPID);

	  static HRESULT ResolveVCIInfo(CATUnicodeString istrVCIID,
								    CATUnicodeString istrBOMID,
									CATUnicodeString istrVCIPartNum,
									CATUnicodeString istrVCIFolderPath,
									CATUnicodeString &ostrRunInfo);
  private:

	  static HRESULT RetrieveVCIProductInfo(CATUnicodeString istrVCIPartNum,
											CATUnicodeString istrVCIFolderPath,
											vector<ProductInfo> &oProductInfoVector,
											CATUnicodeString &ostrRunInfo);

	  static HRESULT RetrieveProductInfo(ProductInfo iFatherProductInfo,
										 vector<ProductInfo> &oProductInfoVector,
										 CATUnicodeString &ostrRunInfo);

	  static HRESULT SACNoteResolve(CATUnicodeString istrStorageName,
									SACNoteInfo &oSACNoteInfo,
									CATUnicodeString &ostrRunInfo);

	  static HRESULT ResolveAnnotateInfo(CATISpecObject_var ispAnnotateGSObj,
										 NoteAnnotate &oNoteAnnotate);


    
	  static HRESULT ResolveSTDInfo(CATISpecObject_var ispSTDAndHoleGSObj,
									vector<PtAndLineGSInfo> &oPtAndLineGSInfoVector);
	  
	  static HRESULT ResolvePtAndLineGSInfo(CATISpecObject_var ispPtAndLineGSObj,
											PtAndLineGSInfo &oPtAndLineGSInfo);

	  static HRESULT ResolveSTDParamSetInfo(CATISpecObject_var ispPtAndLineGSObj,
											CATLISTV(CATISpecObject_var) &ospSTDParamObjList,		//点线集下“标准件”参数集中的参数对象
											vector<STDInfo> &oSTDInfoVector);

	  static HRESULT ResolveParamsInfo(CATISpecObject_var ispPtAndLineGSObj,
									   ParamInfo &oParamInfo);

	  static HRESULT RetrievePtGSAndSTDLineGS(CATISpecObject_var ispPtAndLineGSObj,
									          CATISpecObject_var &ospPtGSObj,
									          CATISpecObject_var &ospSTDLineGSObj);

	  static HRESULT ResolveSTDLinesInfo(CATISpecObject_var ispPtAndLineGSObj,
										 vector<LineInfo> &oLineInfoVector);

	  static HRESULT RetrieveExtremitiesFromLineObj(CATISpecObject_var ispLineObj,
													CATMathPoint &oStartMathPoint,
													CATMathPoint &oEndMathPoint);

	  //static HRESULT ResolvePtGSInfo(CATISpecObject_var ispPtAndLineGSObj, vector<CATMathPoint> &oPtGSInfoVector);

	  static HRESULT RetrieveMathPointFromPtObj(CATISpecObject_var ispPtObj,CATMathPoint &oMathPoint);

	  static HRESULT RetrieveDirChildrenFromFatherBUByType(CATBaseUnknown_var ispFatherBU,
														   CATUnicodeString istrChildType,
														   CATLISTV(CATBaseUnknown_var) &ospChildBUList);

	   



};

//-----------------------------------------------------------------------

#endif
