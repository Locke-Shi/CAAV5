// COPYRIGHT Dassault Systemes 2015
//===================================================================
//
// SJDPartAddin.cpp
// Provide implementation to interface
//    CATIShapeDesignWorkshopAddin
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//  Jan 2015  Creation: Code generated by the CAA wizard  LuJunHome
//===================================================================
#include "SJDPartAddin.h"
 

#include "CATCommandHeader.h"
#include "CATCreateWorkshop.h"

MacDeclareHeader(SJDPartHeader);

CATImplementClass(SJDPartAddin,
                  DataExtension,
                  CATBaseUnknown,
                  SJDPartAddinLT );
 

//-----------------------------------------------------------------------------
// SJDPartAddin : constructor
//-----------------------------------------------------------------------------
SJDPartAddin::SJDPartAddin():
    CATBaseUnknown()
{
}

//-----------------------------------------------------------------------------
// SJDPartAddin : destructor
//-----------------------------------------------------------------------------
SJDPartAddin::~SJDPartAddin()
{
}
 
// Link the implementation to its interface
// ---------------------------------------



//TIE or TIEchain definitions
//#include "TIE_CATIShapeDesignWorkshopAddin.h"
//TIE_CATIShapeDesignWorkshopAddin( SJDPartAddin);
#include "TIE_CATIAfrGeneralWksAddin.h"
TIE_CATIAfrGeneralWksAddin( SJDPartAddin);

//Methods implementation

void SJDPartAddin::CreateCommands()
{

	new SJDPartHeader("Test",
		"SJDPartExampleM",
		"SJDPartExampleCmd",
		(void *) NULL);
	//new TSTAnoProductHeader("AnoUpdate",
	//                    "TSTAnoCommands",
	//                    "TSTAnoUpdateCmd",
	//                    (void *) NULL);
}

CATCmdContainer *SJDPartAddin::CreateToolbars()
{
	NewAccess(CATCmdContainer, pMyToolbar, PartTlb);

	NewAccess(CATCmdStarter, pTest, Test);
	SetAccessCommand(pTest, "Test");
	SetAccessChild(pMyToolbar, pTest);

	////
	//NewAccess(CATCmdStarter, pMyButton2, Button2);
	//SetAccessCommand(pMyButton2, "Show");
	//SetAccessNext(pMyButton1, pMyButton2);

	AddToolbarView(pMyToolbar, 1, Left);

	return pMyToolbar;
}