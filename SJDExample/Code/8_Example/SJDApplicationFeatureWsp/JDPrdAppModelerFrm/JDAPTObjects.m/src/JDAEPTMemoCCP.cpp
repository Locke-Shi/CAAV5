// COPYRIGHT Dassault Systemes 2009
//===================================================================
//
// JDAEPTMemoCCP.cpp
// Provide implementation to interface
//    CATICutAndPastable
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//  Apr 2009  Creation: Code generated by the CAA wizard  LuJun
//===================================================================
#include "JDAEPTMemoCCP.h"

#include "CATISpecObject.h"
#include "JDAIPTRoot.h"
#include "CATPathElement.h"

#include "iostream.h"


 
CATImplementClass(JDAEPTMemoCCP,
                  DataExtension,
                  ObjectCCP_SPEC,
                  JDAPTMemo );
 

//-----------------------------------------------------------------------------
// JDAEPTMemoCCP : constructor
//-----------------------------------------------------------------------------
JDAEPTMemoCCP::JDAEPTMemoCCP():
    ObjectCCP_SPEC()
{
}

//-----------------------------------------------------------------------------
// JDAEPTMemoCCP : destructor
//-----------------------------------------------------------------------------
JDAEPTMemoCCP::~JDAEPTMemoCCP()
{
}
 
// Link the implementation to its interface
// ---------------------------------------



//TIE or TIEchain definitions
#include "TIE_CATICutAndPastable.h"
TIE_CATICutAndPastable( JDAEPTMemoCCP);


//Methods implementation

//-----------------------------------------------------------------------------
// Implements CATICutAndPastable::ListExtractFormats
//-----------------------------------------------------------------------------
//CATLISTP(CATFormat) JDAEPTMemoCCP::ListExtractFormats () const
//{
//
//}

//-----------------------------------------------------------------------------
// Implements CATICutAndPastable::BoundaryExtract
//-----------------------------------------------------------------------------
//int JDAEPTMemoCCP::BoundaryExtract (ListOfVarBaseUnknown&  ioObjectsAlreadyInBoundary , const ListOfVarBaseUnknown*  iObjectsToAdd , const CATFormat*  iAnImposedFormat) const
//{
//
//   return 0;
//}

//-----------------------------------------------------------------------------
// Implements CATICutAndPastable::Extract
//-----------------------------------------------------------------------------
//VarBaseUnknown JDAEPTMemoCCP::Extract (ListOfVarBaseUnknown&  iObjectToCopy , const CATFormat*  iAnImposedFormat) const
//{
//
//}

//-----------------------------------------------------------------------------
// Implements CATICutAndPastable::ListPasteFormats
//-----------------------------------------------------------------------------
//CATLISTP(CATFormat) JDAEPTMemoCCP::ListPasteFormats () const
//{
//
//}

//-----------------------------------------------------------------------------
// Implements CATICutAndPastable::Paste
//-----------------------------------------------------------------------------
//ListOfVarBaseUnknown JDAEPTMemoCCP::Paste (ListOfVarBaseUnknown&  iObjectToCopy , ListOfVarBaseUnknown*  iToCurObjects , const CATFormat*  iAnImposedFormat)
//{
//
//}

//-----------------------------------------------------------------------------
// Implements CATICutAndPastable::Create
//-----------------------------------------------------------------------------
//int JDAEPTMemoCCP::Create (CATBaseUnknown_Associations&  ioAssociationOfObjects , const CATFormat*  an_imposed_format)
//{
//
//   return 0;
//}

//-----------------------------------------------------------------------------
// Implements CATICutAndPastable::Update
//-----------------------------------------------------------------------------
int JDAEPTMemoCCP::Update (CATBaseUnknown_Associations&  ioAssociationOfObjects , const CATFormat*  iAnImposedFormat , ListOfVarBaseUnknown*  iToCurObjects)
{
	//cout <<"==> Now we are in JDAEPTMemoCCP::Update  !" << endl;

	//Add this object to the root
	HRESULT hr;
	int num = 0;
	if (iToCurObjects && iToCurObjects->Size()) {
		CATPathElement *pPath = (CATPathElement*)(CATBaseUnknown*)(*iToCurObjects)[1];
		JDAIPTRoot *piRoot = NULL;
		if (pPath) {
			hr = pPath->Search(IID_JDAIPTRoot, (void**) &piRoot);
		}
		else
			cout << "  ==> Get CATPathElement error !" << endl;
		if (SUCCEEDED(hr)) {
			//we have a root, let's paste the memo under it
			CATISpecObject_var spSpecOnThis = this;
			piRoot->AddChild(spSpecOnThis);
			piRoot->Release();
			piRoot = NULL;
			num = 1;
		}
		else
			cout << "  ==> Get JDAIPTRoot error !" << endl;
	}
	  
	num = ObjectCCP_SPEC::Update(ioAssociationOfObjects, iAnImposedFormat, iToCurObjects);

	//cout <<"==> Now end JDAEPTMemoCCP::Update  !" << endl;

   return num;
}

//-----------------------------------------------------------------------------
// Implements CATICutAndPastable::ListLinkFormats
//-----------------------------------------------------------------------------
//CATLISTP(CATFormat) JDAEPTMemoCCP::ListLinkFormats () const
//{
//
//}

//-----------------------------------------------------------------------------
// Implements CATICutAndPastable::Link
//-----------------------------------------------------------------------------
//ListOfVarBaseUnknown JDAEPTMemoCCP::Link (ListOfVarBaseUnknown&  object_to_link , ListOfVarBaseUnknown*  to_cur_objects , const CATFormat*  an_imposed_format)
//{
//
//}

//-----------------------------------------------------------------------------
// Implements CATICutAndPastable::ListRemoveFormats
//-----------------------------------------------------------------------------
//CATLISTP(CATFormat) JDAEPTMemoCCP::ListRemoveFormats () const
//{
//
//}

//-----------------------------------------------------------------------------
// Implements CATICutAndPastable::BoundaryRemove
//-----------------------------------------------------------------------------
//int JDAEPTMemoCCP::BoundaryRemove (ListOfVarBaseUnknown&  ioObjectsAlreadyInBoundary , const ListOfVarBaseUnknown*  iObjectsToRemove , const CATFormat*  iAnImposedFormat) const
//{
//
//   return 0;
//}

//-----------------------------------------------------------------------------
// Implements CATICutAndPastable::Remove
//-----------------------------------------------------------------------------
//int JDAEPTMemoCCP::Remove (ListOfVarBaseUnknown&  iObjectToRemove , const CATFormat*  iAnImposedFormat)
//{
//
//   return 0;
//}

