// COPYRIGHT Dassault Systemes 2009
//===================================================================
//
// JDAEPTMemoBuild.cpp
// Provide implementation to interface
//    CATIBuild
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//  Apr 2009  Creation: Code generated by the CAA wizard  LuJun
//===================================================================
#include "JDAEPTMemoBuild.h"

#include "CATIConnector.h"
#include "CATISpecObject.h"
#include "CATModify.h"
#include "CATIModelEvents.h"
#include "CATLISTV_CATBaseUnknown.h"
#include "CATPoint.h"
//#include "CATMathPoint.h"
#include "CATMathTransformation.h"
#include "CATISpecObject.h"
#include "JDAIPTMemo.h"

#include "iostream.h"


 
CATImplementClass(JDAEPTMemoBuild,
                  DataExtension,
                  CATBaseUnknown,
                  JDAPTMemo );
 

//-----------------------------------------------------------------------------
// JDAEPTMemoBuild : constructor
//-----------------------------------------------------------------------------
JDAEPTMemoBuild::JDAEPTMemoBuild():
    CATBaseUnknown()
{
}

//-----------------------------------------------------------------------------
// JDAEPTMemoBuild : destructor
//-----------------------------------------------------------------------------
JDAEPTMemoBuild::~JDAEPTMemoBuild()
{
}
 
// Link the implementation to its interface
// ---------------------------------------



//TIE or TIEchain definitions
#include "TIE_CATIBuild.h"
TIE_CATIBuild( JDAEPTMemoBuild);


//Methods implementation

//-----------------------------------------------------------------------------
// Implements CATIBuild::Build
//-----------------------------------------------------------------------------
HRESULT JDAEPTMemoBuild::Build ()
{
	//cout <<"==> Now we are in JDAEPTMemoBuild::Build  !" << endl;

	///--- Solution for Exercise : 3D Visualization
	//Refresh the view
	CATIModelEvents_var spModel = this;
	CATModify notif(this);
	if ( !!spModel ) {
		spModel->Dispatch(notif);
	}
	///--- End of solution: 3D Visualization

	//cout <<"==> Now end JDAEPTMemoBuild::Build  !" << endl;

	return S_OK;
	///--- End of solution: Applicative Feature Definition
}

