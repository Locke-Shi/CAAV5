// COPYRIGHT Dassault Systemes 2009
//===================================================================
//
// JDAEPTMemo.h
// Provide implementation to interface
//    JDAIPTMemo

//
//===================================================================
//
// Usage notes:
//
//===================================================================
//CAA2 Wizard Generation Report
//EXTENSION:	JDAPTMemo
//EXTENSIONTYPE:	DataExtension

//    TIE: JDAIPTMemo

//End CAA2 Wizard Generation Report
//
//  Apr 2009  Creation: Code generated by the CAA wizard  LuJun
//===================================================================
#ifndef JDAEPTMemo_H
#define JDAEPTMemo_H

#include "CATBaseUnknown.h"
#include "CATUnicodeString.h"

//-----------------------------------------------------------------------

/**
* Class representing xxx.
*
* <br><b>Role</b>: Provide the basic class function...
* <p>
* It implements the interfaces :
*  <ol>
*  <li>@href JDAIPTMemo
*  </ol>
*
* @href ClassReference, Class#MethodReference, #InternalMethod...
*/
class JDAEPTMemo: public CATBaseUnknown

{
  CATDeclareClass;

  public:

  // Standard constructors and destructors for an implementation class
  // -----------------------------------------------------------------
     JDAEPTMemo ();
     virtual ~JDAEPTMemo ();

    /**
     * Implements a function from an interface.
     * @href JDAIPTMemo#GetX
     */
     HRESULT GetX (double & oX ) ;

    /**
     * Implements a function from an interface.
     * @href JDAIPTMemo#SetX
     */
     HRESULT SetX (double  iX ) ;

    /**
     * Implements a function from an interface.
     * @href JDAIPTMemo#GetY
     */
     HRESULT GetY (double & oY ) ;

    /**
     * Implements a function from an interface.
     * @href JDAIPTMemo#SetY
     */
     HRESULT SetY (double  iY ) ;

    /**
     * Implements a function from an interface.
     * @href JDAIPTMemo#GetZ
     */
     HRESULT GetZ (double & oZ ) ;

    /**
     * Implements a function from an interface.
     * @href JDAIPTMemo#SetZ
     */
     HRESULT SetZ (double  iZ ) ;


  private:
	  HRESULT GetLiteralParameter(CATUnicodeString iParamName,CATBaseUnknown **oLiteralParam);
  // The copy constructor and the equal operator must not be implemented
  // -------------------------------------------------------------------
  JDAEPTMemo (JDAEPTMemo &);
  JDAEPTMemo& operator=(JDAEPTMemo&);

};

//-----------------------------------------------------------------------

#endif
