// COPYRIGHT Dassault Systemes 2009
//===================================================================
//
// JDAEPTBaseDescendants.cpp
// Provide implementation to interface
//    CATIDescendants
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//  Apr 2009  Creation: Code generated by the CAA wizard  LuJun
//===================================================================
#include "JDAEPTBaseDescendants.h"
#include "CATLISTV_CATISpecObject.h"
#include "CATLISTV_CATBaseUnknown.h"
#include "CATISpecAttrAccess.h"
#include "CATISpecAttrKey.h"
#include "CATISpecObject.h"

#include "iostream.h"


CATImplementClass(JDAEPTBaseDescendants,
                  CodeExtension,
                  CATBaseUnknown,
                  JDAPTBase );
 

//-----------------------------------------------------------------------------
// JDAEPTBaseDescendants : constructor
//-----------------------------------------------------------------------------
JDAEPTBaseDescendants::JDAEPTBaseDescendants():
    CATBaseUnknown()
{
	//_piListComponentKey = NULL;

}

//-----------------------------------------------------------------------------
// JDAEPTBaseDescendants : destructor
//-----------------------------------------------------------------------------
JDAEPTBaseDescendants::~JDAEPTBaseDescendants()
{
	/*if (_piListComponentKey)
		_piListComponentKey->Release();
	_piListComponentKey = NULL;*/

}
 
// Link the implementation to its interface
// ---------------------------------------



//TIE or TIEchain definitions
#include "TIE_CATIDescendants.h"
TIE_CATIDescendants( JDAEPTBaseDescendants);

CATISpecAttrKey *JDAEPTBaseDescendants::GetComponentKey ()
{
	//cout <<"==> Now we are in JDAEPTBaseDescendants::GetComponentKey  !" << endl;

	//if (!_piListComponentKey) {
		HRESULT  hr = E_FAIL;
		CATISpecAttrAccess *piAccess = NULL;
		CATISpecAttrKey *piListComponentKey=NULL;
		hr = this->QueryInterface(IID_CATISpecAttrAccess, (void**) &piAccess);
		if (SUCCEEDED(hr)) {
			piListComponentKey = piAccess->GetAttrKey("ListComponents");
			piAccess->Release();  piAccess = NULL;
		}
		else
			cout << "  ==> Get CATISpecAttrAccess error !" << endl;
	//}
		//cout <<"==> Now end JDAEPTBaseDescendants::GetComponentKey  !" << endl;

	return (piListComponentKey);
}


//Methods implementation

//-----------------------------------------------------------------------------
// Implements CATIDescendants::Append
//-----------------------------------------------------------------------------
void JDAEPTBaseDescendants::Append (const CATISpecObject_var &  iFeature )
{

	//cout <<"==> Now we are in JDAEPTBaseDescendants::Append  !" << endl;

	HRESULT hr = E_FAIL;
	CATISpecAttrAccess *piAccess = NULL;
	CATISpecAttrKey *piComponentKey = GetComponentKey();

	hr = this->QueryInterface(IID_CATISpecAttrAccess, (void**) &piAccess);
	  
	if (SUCCEEDED(hr) && piComponentKey) {
		piAccess->SetSpecObject(piComponentKey, iFeature);
		piAccess->Release();		piAccess = NULL;
		piComponentKey->Release();  piComponentKey = NULL;
	} 
	else
		cout << "  ==> Get CATISpecAttrAccess error in JDAEPTBaseDescendants::Append !" << endl;

	//cout <<"==> Now end JDAEPTBaseDescendants::Append  !" << endl;

	return;
}

//-----------------------------------------------------------------------------
// Implements CATIDescendants::Prepend
//-----------------------------------------------------------------------------
void JDAEPTBaseDescendants::Prepend (const CATISpecObject_var &  iFeature)
{
	//cout <<"==> Now we are in JDAEPTBaseDescendants::Prepend  !" << endl;

	HRESULT hr = E_FAIL;
	CATISpecAttrAccess *piAccess = NULL;
	CATISpecAttrKey *piComponentKey = GetComponentKey();

	hr = this->QueryInterface(IID_CATISpecAttrAccess, (void**) &piAccess);

	if (SUCCEEDED(hr) && piComponentKey) {
		piAccess->Beginning(piComponentKey);
		piAccess->InsertBeforeCurrent(piComponentKey, iFeature);  
		piAccess->Release();		piAccess = NULL;
		piComponentKey->Release();  piComponentKey = NULL;
	}
	else
		cout << "  ==> Get CATISpecAttrAccess error !" << endl;

	//cout <<"==> Now end JDAEPTBaseDescendants::Prepend  !" << endl;

	return;
}

//-----------------------------------------------------------------------------
// Implements CATIDescendants::AddChild
//-----------------------------------------------------------------------------
void JDAEPTBaseDescendants::AddChild (const CATISpecObject_var &  iFeature , int  iPosition)
{

	//cout <<"==> Now we are in JDAEPTBaseDescendants::AddChild  !" << endl;


	HRESULT hr = E_FAIL;
	CATISpecAttrAccess *piAccess = NULL;
	CATISpecAttrKey *piComponentKey = GetComponentKey();

	hr = this->QueryInterface(IID_CATISpecAttrAccess, (void**) &piAccess);

	if (SUCCEEDED(hr) && piComponentKey) {
		piAccess->SetSpecObject(piComponentKey, iFeature, iPosition);  
		piAccess->Release();		piAccess = NULL;
		piComponentKey->Release();   piComponentKey = NULL;
	}
	else
		cout << "  ==> Get CATISpecAttrAccess error !" << endl;

	//cout <<"==> Now end JDAEPTBaseDescendants::AddChild  !" << endl;

	return;
}

//-----------------------------------------------------------------------------
// Implements CATIDescendants::RemoveChild
//-----------------------------------------------------------------------------
void JDAEPTBaseDescendants::RemoveChild (const CATISpecObject_var &  iFeature )
{

	//cout <<"==> Now we are in JDAEPTBaseDescendants::RemoveChild  !" << endl;


	HRESULT hr = E_FAIL;
	CATISpecAttrAccess *piAccess = NULL;
	CATISpecAttrKey *piComponentKey = GetComponentKey();

	hr = this->QueryInterface(IID_CATISpecAttrAccess, (void**) &piAccess);

	if (SUCCEEDED(hr) && piComponentKey) {
		piAccess->RemoveSpecObject(piComponentKey, iFeature);  
		piAccess->Release();		piAccess = NULL;
		piComponentKey->Release();   piComponentKey = NULL;
	}
	else
		cout << "  ==> Get CATISpecAttrAccess error !" << endl;

	//cout <<"==> Now end JDAEPTBaseDescendants::RemoveChild  !" << endl;

	return;
}

//-----------------------------------------------------------------------------
// Implements CATIDescendants::GetPosition
//-----------------------------------------------------------------------------
int JDAEPTBaseDescendants::GetPosition (const CATISpecObject_var &  iFeature )
{

	//cout <<"==> Now we are in JDAEPTBaseDescendants::GetPosition  !" << endl;

	HRESULT  hr = E_FAIL;
	CATISpecAttrAccess *piAccess = NULL;
	CATISpecAttrKey *piComponentKey = GetComponentKey();

	hr = this->QueryInterface(IID_CATISpecAttrAccess, (void**) &piAccess);

	int position = 0;
	if (SUCCEEDED(hr) && piComponentKey) {
		position = piAccess->GetPosition(piComponentKey, iFeature);  
		piAccess->Release();		piAccess = NULL;
		piComponentKey->Release();  piComponentKey = NULL;
	}
	else
		cout << "  ==> Get CATISpecAttrAccess error !" << endl;

	//cout <<"==> Now end JDAEPTBaseDescendants::GetPosition  !" << endl;

	return position;
}

//-----------------------------------------------------------------------------
// Implements CATIDescendants::ChangePosition
//-----------------------------------------------------------------------------
void JDAEPTBaseDescendants::ChangePosition (const CATISpecObject_var &  iFeature , int  iNewPosition )
{

	//cout <<"==> Now we are in JDAEPTBaseDescendants::ChangePosition  !" << endl;

	HRESULT hr = E_FAIL;
	CATISpecAttrAccess *piAccess = NULL;
	CATISpecAttrKey *piComponentKey = GetComponentKey();

	hr = this->QueryInterface(IID_CATISpecAttrAccess, (void**) &piAccess);

	if (SUCCEEDED(hr) && piComponentKey) {
		piAccess->ChangePosition(piComponentKey, iFeature, iNewPosition);  
		piAccess->Release();		piAccess = NULL;
		piComponentKey->Release();   piComponentKey = NULL;
	}
	else
		cout << "  ==> Get CATISpecAttrAccess error !" << endl;

	//cout <<"==> Now end JDAEPTBaseDescendants::ChangePosition  !" << endl;

	return;
}

//-----------------------------------------------------------------------------
// Implements CATIDescendants::GetChildAtPosition
//-----------------------------------------------------------------------------
CATISpecObject_var JDAEPTBaseDescendants::GetChildAtPosition (int  iPosition )
{

	//cout <<"==> Now we are in JDAEPTBaseDescendants::GetChildAtPosition  !" << endl;

	 HRESULT hr = E_FAIL;
	CATISpecAttrAccess *piAccess = NULL;
	CATISpecAttrKey *piComponentKey = GetComponentKey();

	hr = this->QueryInterface(IID_CATISpecAttrAccess, (void**) &piAccess);

	CATISpecObject *piChild = NULL;
	if (SUCCEEDED(hr) && piComponentKey) {
		piChild = piAccess->GetSpecObject(piComponentKey, iPosition);  
		piAccess->Release();		piAccess = NULL;
		piComponentKey->Release();   piComponentKey = NULL;
	}
	else
		cout << "  ==> Get CATISpecAttrAccess error !" << endl;
	CATISpecObject_var spChild = piChild;
	if (piChild) {
		piChild->Release();
		piChild = NULL;
	}

	//cout <<"==> Now end JDAEPTBaseDescendants::GetChildAtPosition  !" << endl;

	return spChild; 
}

//-----------------------------------------------------------------------------
// Implements CATIDescendants::GetNumberOfChildren
//-----------------------------------------------------------------------------
int JDAEPTBaseDescendants::GetNumberOfChildren ()
{

	//cout <<"==> Now we are in JDAEPTBaseDescendants::GetNumberOfChildren  !" << endl;

	HRESULT hr = E_FAIL;
	CATISpecAttrAccess *piAccess = NULL;
	CATISpecAttrKey *piComponentKey = GetComponentKey();

	hr = this->QueryInterface(IID_CATISpecAttrAccess, (void**) &piAccess);

	int numberOfChildren = 0;
	if (SUCCEEDED(hr) && piComponentKey) {
		numberOfChildren = piAccess->GetListSize(piComponentKey);  
		piAccess->Release();		piAccess = NULL;
		piComponentKey->Release();   piComponentKey = NULL;
	}
	else
		cout << "  ==> Get CATISpecAttrAccess error !" << endl;

	//cout <<"==> Now end JDAEPTBaseDescendants::GetNumberOfChildren  !" << endl;

	return numberOfChildren; 
}

//-----------------------------------------------------------------------------
// Implements CATIDescendants::GetDirectChildren
//-----------------------------------------------------------------------------
void JDAEPTBaseDescendants::GetDirectChildren (CATClassId  iIntfName , CATListValCATISpecObject_var & oLst)
{
	//cout <<"==> Now we are in JDAEPTBaseDescendants::GetDirectChildren  !" << endl;

	HRESULT hr = E_FAIL;
	CATISpecAttrAccess *piAccess = NULL;
	CATISpecAttrKey *piComponentKey = GetComponentKey();

	hr = this->QueryInterface(IID_CATISpecAttrAccess, (void**) &piAccess);

	CATListValCATBaseUnknown_var *pListOfObject = NULL;
	if (SUCCEEDED(hr) && piComponentKey) {
		pListOfObject = piAccess->ListSpecObjects(piComponentKey, iIntfName);  
		piAccess->Release();		piAccess = NULL;
		piComponentKey->Release();  piComponentKey = NULL;
	}
	else
		cout << "  ==> Get CATISpecAttrAccess error !" << endl;

	//cout << "  ==> The number of child: " << pListOfObject->Size() << endl;
	//Copy the list in the output format
	if (pListOfObject != NULL) {
		for (int i=1; i<=pListOfObject->Size(); i++) {
			oLst.Append((*pListOfObject)[i]); 
		}
		delete pListOfObject;
		pListOfObject = NULL;
	}
	//cout <<"==> Now end JDAEPTBaseDescendants::GetDirectChildren  !" << endl;

	return;
}

//-----------------------------------------------------------------------------
// Implements CATIDescendants::GetAllChildren
//-----------------------------------------------------------------------------
void JDAEPTBaseDescendants::GetAllChildren (CATClassId  iIntfName , CATListValCATISpecObject_var & oLst)
{
	//cout <<"==> Now we are in JDAEPTBaseDescendants::GetAllChildren  !" << endl;

	HRESULT hr = E_FAIL;
	CATISpecAttrAccess *piAccess = NULL;
	CATISpecAttrKey *piComponentKey = GetComponentKey();

	hr = this->QueryInterface(IID_CATISpecAttrAccess, (void**) &piAccess);

	CATListValCATBaseUnknown_var *pListOfObject = NULL;
	if (SUCCEEDED(hr) && piComponentKey) {
		pListOfObject = piAccess->ListSpecObjects(piComponentKey, iIntfName);  
		piAccess->Release();		piAccess = NULL;
		piComponentKey->Release();  piComponentKey = NULL;
	}
	else
		cout << "  ==> Get CATISpecAttrAccess error !" << endl;

	//cout << "  ==> The number of all children: " << pListOfObject->Size() << endl;

	//Copy the list in the output format
	if (pListOfObject != NULL) {
		for (int i=1; i<=pListOfObject->Size(); i++) {
			oLst.Append((*pListOfObject)[i]); 
		}
		delete pListOfObject;
		pListOfObject = NULL;
	}

	//cout <<"==> Now end JDAEPTBaseDescendants::GetAllChildren  !" << endl;

	return;
}

