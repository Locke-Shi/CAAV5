// COPYRIGHT Dassault Systemes 2009
//===================================================================
//
// JDAEPTRootCCP.cpp
// Provide implementation to interface
//    CATICutAndPastable
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//  Apr 2009  Creation: Code generated by the CAA wizard  LuJun
//===================================================================
#include "JDAEPTRootCCP.h"

#include "CATISpecObject.h"
#include "CATPathElement.h"
#include "JDAIPTMemo.h"
#include "JDAIPTRoot.h"

#include "iostream.h"


 
CATImplementClass(JDAEPTRootCCP,
                  DataExtension,
                  ObjectCCP_SPEC,
                  JDAPTRoot );
 

//-----------------------------------------------------------------------------
// JDAEPTRootCCP : constructor
//-----------------------------------------------------------------------------
JDAEPTRootCCP::JDAEPTRootCCP():
    ObjectCCP_SPEC()
{
}

//-----------------------------------------------------------------------------
// JDAEPTRootCCP : destructor
//-----------------------------------------------------------------------------
JDAEPTRootCCP::~JDAEPTRootCCP()
{
}
 
// Link the implementation to its interface
// ---------------------------------------



//TIE or TIEchain definitions
#include "TIE_CATICutAndPastable.h"
TIE_CATICutAndPastable( JDAEPTRootCCP);


//Methods implementation

//-----------------------------------------------------------------------------
// Implements CATICutAndPastable::ListExtractFormats
//-----------------------------------------------------------------------------
//CATLISTP(CATFormat) JDAEPTRootCCP::ListExtractFormats () const
//{
//
//}

//-----------------------------------------------------------------------------
// Implements CATICutAndPastable::BoundaryExtract
//-----------------------------------------------------------------------------
int JDAEPTRootCCP::BoundaryExtract (ListOfVarBaseUnknown&  ioObjectsAlreadyInBoundary , const ListOfVarBaseUnknown*  iObjectsToAdd , const CATFormat*  iAnImposedFormat) const
{
	//cout <<"==> Now we are in JDAEPTRootCCP::BoundaryExtract  !" << endl;

	//default implementation will add the object itself to the boundary
	//int num = ObjectCCP_SPEC::BoundaryExtract(ioObjectsAlreadyInBoundary, iObjectsToAdd, iAnImposedFormat);
	//in our implementation we will add the root children to the boundary, 
	//but we will not add the root itself.
	int num = 0;
	JDAIPTRoot *piRoot = NULL;
	HRESULT hr;
	//cast needed because QueryInterface is not const
	hr = ((CATBaseUnknown*)this)->QueryInterface (IID_JDAIPTRoot, (void**)&piRoot);
	  
	CATListValCATBaseUnknown_var *pList = NULL;
	if (SUCCEEDED(hr)) {
		hr = piRoot->GetChildren(IID_JDAIPTMemo, pList);
		piRoot->Release();
		piRoot = NULL;
	}
	else
		cout << "  ==> Get JDAIPTRoot error !" << endl;
	if (SUCCEEDED(hr) && pList) {
		cout << "  ==> The number of children of JDAIPTRoot is: " << pList->Size() << endl;
		for (int i=1; i<=pList->Size(); i++) {
			ioObjectsAlreadyInBoundary.Append((*pList)[i]);
			num ++;
		}
		delete pList;
		pList = NULL;
	}
	else
		cout << "  ==> Get the children of JDAIPTRoot is 0 !" << endl;
	//cout <<"==> Now end JDAEPTRootCCP::BoundaryExtract  !" << endl;
	return num;
}

//-----------------------------------------------------------------------------
// Implements CATICutAndPastable::Extract
//-----------------------------------------------------------------------------
//VarBaseUnknown JDAEPTRootCCP::Extract (ListOfVarBaseUnknown&  iObjectToCopy , const CATFormat*  iAnImposedFormat) const
//{
//
//}

//-----------------------------------------------------------------------------
// Implements CATICutAndPastable::ListPasteFormats
//-----------------------------------------------------------------------------
	/*CATLISTP(CATFormat) JDAEPTRootCCP::ListPasteFormats () const
	{

	}*/

//-----------------------------------------------------------------------------
// Implements CATICutAndPastable::Paste
//-----------------------------------------------------------------------------
//ListOfVarBaseUnknown JDAEPTRootCCP::Paste (ListOfVarBaseUnknown&  iObjectToCopy , ListOfVarBaseUnknown*  iToCurObjects , const CATFormat*  iAnImposedFormat)
//{
//
//}

//-----------------------------------------------------------------------------
// Implements CATICutAndPastable::Create
//-----------------------------------------------------------------------------
//int JDAEPTRootCCP::Create (CATBaseUnknown_Associations&  ioAssociationOfObjects , const CATFormat*  an_imposed_format)
//{
//
//   return 0;
//}

//-----------------------------------------------------------------------------
// Implements CATICutAndPastable::Update
//-----------------------------------------------------------------------------
//int JDAEPTRootCCP::Update (CATBaseUnknown_Associations&  ioAssociationOfObjects , const CATFormat*  iAnImposedFormat , ListOfVarBaseUnknown*  iToCurObjects)
//{
//
//   return 0;
//}

//-----------------------------------------------------------------------------
// Implements CATICutAndPastable::ListLinkFormats
//-----------------------------------------------------------------------------
//CATLISTP(CATFormat) JDAEPTRootCCP::ListLinkFormats () const
//{
//
//}

//-----------------------------------------------------------------------------
// Implements CATICutAndPastable::Link
//-----------------------------------------------------------------------------
//ListOfVarBaseUnknown JDAEPTRootCCP::Link (ListOfVarBaseUnknown&  object_to_link , ListOfVarBaseUnknown*  to_cur_objects , const CATFormat*  an_imposed_format)
//{
//
//}

//-----------------------------------------------------------------------------
// Implements CATICutAndPastable::ListRemoveFormats
//-----------------------------------------------------------------------------
//CATLISTP(CATFormat) JDAEPTRootCCP::ListRemoveFormats () const
//{
//
//}

//-----------------------------------------------------------------------------
// Implements CATICutAndPastable::BoundaryRemove
//-----------------------------------------------------------------------------
int JDAEPTRootCCP::BoundaryRemove (ListOfVarBaseUnknown&  ioObjectsAlreadyInBoundary , const ListOfVarBaseUnknown*  iObjectsToRemove , const CATFormat*  iAnImposedFormat) const
{
	//cout <<"==> Now we are in JDAEPTRootCCP::BoundaryRemove  !" << endl;
	//return ObjectCCP_SPEC::BoundaryRemove(ioObjectsAlreadyInBoundary, iObjectsToRemove, iAnImposedFormat);
	return 0; //forbid the root removal
}

//-----------------------------------------------------------------------------
// Implements CATICutAndPastable::Remove
//-----------------------------------------------------------------------------
int JDAEPTRootCCP::Remove (ListOfVarBaseUnknown&  iObjectToRemove , const CATFormat*  iAnImposedFormat)
{

	//cout <<"==> Now we are in JDAEPTRootCCP::Remove  !" << endl;
  //return ObjectCCP_SPEC::Remove(iObjectToRemove, iAnImposedFormat);

   return 0;
}

