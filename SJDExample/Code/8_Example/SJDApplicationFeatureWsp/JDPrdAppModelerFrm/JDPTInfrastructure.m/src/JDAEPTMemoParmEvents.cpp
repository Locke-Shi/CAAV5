// COPYRIGHT Dassault Systemes 2010
//===================================================================
//
// JDAEPTMemoParmEvents.cpp
// Provide implementation to interface
//    JDAIPTMemoParmEvents
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//  Oct 2010  Creation: Code generated by the CAA wizard  LuJun
//===================================================================
#include "JDAEPTMemoParmEvents.h"
#include "CATISpecObject.h"
#include "CATIParmEvents.h"
#include "CATInterfaceEvents.h"
 
CATImplementClass(JDAEPTMemoParmEvents,
                  DataExtension,
                  CATBaseUnknown,
                  JDAPTMemo );
 

//-----------------------------------------------------------------------------
// JDAEPTMemoParmEvents : constructor
//-----------------------------------------------------------------------------
JDAEPTMemoParmEvents::JDAEPTMemoParmEvents():
    CATBaseUnknown()
{
}

//-----------------------------------------------------------------------------
// JDAEPTMemoParmEvents : destructor
//-----------------------------------------------------------------------------
JDAEPTMemoParmEvents::~JDAEPTMemoParmEvents()
{
}
 
// Link the implementation to its interface
// ---------------------------------------



//TIE or TIEchain definitions
#include "TIE_JDAIPTMemoParmEvents.h"
TIE_JDAIPTMemoParmEvents( JDAEPTMemoParmEvents);


//Methods implementation
void JDAEPTMemoParmEvents::AddSubscribe (CATICkeParm_var &iParameterToObserve)
{

	CATIParmEvents_var spParameterEvents = iParameterToObserve;
	CATInterfaceEvents_var spSpev (this);

	spSpev->AddSubscription(spParameterEvents,
		spParameterEvents->GetChangeValueNotification(),
		(CATSubscriberMethod)&JDAEPTMemoParmEvents::OnChangeValueEvent,
		"JDAIPTMemoParmEvents",
		(CATSubscriberData) this);

	return;
}

void JDAEPTMemoParmEvents::RemoveSubscribe ( CATICkeParm_var &iParameterToObserve)
{
	CATIParmEvents_var spParameterEvents = iParameterToObserve;
	CATInterfaceEvents_var spSpev (this);

	spSpev->RemoveSubscriptionsOn(spParameterEvents, 
		spParameterEvents->GetDeleteNotification(),
		"JDAIPTMemoParmEvents", NULL);

	return;
}

//-----------------------------------------------------------------------------
// Implements JDAIPTMemoParmEvents::OnChangeValueEvent
//-----------------------------------------------------------------------------
void JDAEPTMemoParmEvents::OnChangeValueEvent (CATCallbackEvent  iEvent , void*  iFrom , CATNotification*  iNotification , CATSubscriberData  iInfo , CATCallback  iCallback)
{
	CATISpecObject_var spSpecObj=this;
	spSpecObj->Update();

	return;
}

