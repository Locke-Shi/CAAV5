// COPYRIGHT Dassault Systemes 2009
//===================================================================
//
// JDAEPTRoot.h
// Provide implementation to interface
//    JDAIPTRoot

//
//===================================================================
//
// Usage notes:
//
//===================================================================
//CAA2 Wizard Generation Report
//EXTENSION:	JDAPTRoot
//EXTENSIONTYPE:	CodeExtension

//    TIE: JDAIPTRoot

//End CAA2 Wizard Generation Report
//
//  Apr 2009  Creation: Code generated by the CAA wizard  LuJun
//===================================================================
#ifndef JDAEPTRoot_H
#define JDAEPTRoot_H

#include "CATBaseUnknown.h"
#include "CATISpecObject.h"

//-----------------------------------------------------------------------

/**
* Class representing xxx.
*
* <br><b>Role</b>: Provide the basic class function...
* <p>
* It implements the interfaces :
*  <ol>
*  <li>@href JDAIPTRoot
*  </ol>
*
* @href ClassReference, Class#MethodReference, #InternalMethod...
*/
class JDAEPTRoot: public CATBaseUnknown

{
  CATDeclareClass;

  public:

  // Standard constructors and destructors for an implementation class
  // -----------------------------------------------------------------
     JDAEPTRoot ();
     virtual ~JDAEPTRoot ();

    /**
     * Implements a function from an interface.
     * @href JDAIPTRoot#AddChild
     */
     HRESULT AddChild (CATISpecObject * ipiFeature ) ;

    /**
     * Implements a function from an interface.
     * @href JDAIPTRoot#RemoveChild
     */
     HRESULT RemoveChild (CATISpecObject * ipiFeature ) ;

    /**
     * Implements a function from an interface.
     * @href JDAIPTRoot#GetChildren
     */
     HRESULT GetChildren (const IID & iItfIID  , CATListValCATBaseUnknown_var *&  oList ) ;


  private:
  // The copy constructor and the equal operator must not be implemented
  // -------------------------------------------------------------------
  JDAEPTRoot (JDAEPTRoot &);
  JDAEPTRoot& operator=(JDAEPTRoot&);

};

//-----------------------------------------------------------------------

#endif
