// COPYRIGHT Dassault Systemes 2009
//===================================================================
//
// JDAEPTBaseParmPublisher.h
// Provide implementation to interface
//    CATIParmPublisher

//
//===================================================================
//
// Usage notes:
//
//===================================================================
//CAA2 Wizard Generation Report
//EXTENSION:	JDAPTBase
//EXTENSIONTYPE:	DataExtension

//    TIE: CATIParmPublisher

//End CAA2 Wizard Generation Report
//
//  Apr 2009  Creation: Code generated by the CAA wizard  LuJun
//===================================================================
#ifndef JDAEPTBaseParmPublisher_H
#define JDAEPTBaseParmPublisher_H

#include "CATBaseUnknown.h"
#include "CATISpecObject.h"
#include "CATIVisitor.h"
#include "CATLISTV_CATISpecObject.h"

//-----------------------------------------------------------------------

/**
* Class representing xxx.
*
* <br><b>Role</b>: Provide the basic class function...
* <p>
* It implements the interfaces :
*  <ol>
*  <li>@href CATIParmPublisher
*  </ol>
*
* @href ClassReference, Class#MethodReference, #InternalMethod...
*/
class JDAEPTBaseParmPublisher: public CATBaseUnknown

{
  CATDeclareClass;

  public:

  // Standard constructors and destructors for an implementation class
  // -----------------------------------------------------------------
     JDAEPTBaseParmPublisher ();
     virtual ~JDAEPTBaseParmPublisher ();

    /**
     * Implements a function from an interface.
     * @href CATIParmPublisher#Append
     */
     void Append (const CATISpecObject_var &  iKBwareObject  ) ;

    /**
     * Implements a function from an interface.
     * @href CATIParmPublisher#RemoveChild
     */
     void RemoveChild (const CATISpecObject_var &  iKBwareObject  ) ;

    /**
     * Implements a function from an interface.
     * @href CATIParmPublisher#GetDirectChildren
     */
     void GetDirectChildren (CATClassId  iIntfName  , CATListValCATISpecObject_var & iListFound ) ;

    /**
     * Implements a function from an interface.
     * @href CATIParmPublisher#GetAllChildren
     */
     void GetAllChildren (CATClassId  iIntfName  , CATListValCATISpecObject_var & ListFound ) ;

    /**
     * Implements a function from an interface.
     * @href CATIParmPublisher#AllowUserAppend
     */
     boolean AllowUserAppend () const ;

    /**
     * Implements a function from an interface.
     * @href CATIParmPublisher#GetContainer
     */
     CATIContainer_var GetContainer () ;

    /**
     * Implements a function from an interface.
     * @href CATIParmPublisher#VisitChildren
     */
     void VisitChildren (CATIVisitor*  iVisitor  , const int  recur  = 0) ;


  private:
  // The copy constructor and the equal operator must not be implemented
  // -------------------------------------------------------------------
  JDAEPTBaseParmPublisher (JDAEPTBaseParmPublisher &);
  JDAEPTBaseParmPublisher& operator=(JDAEPTBaseParmPublisher&);

};

//-----------------------------------------------------------------------

#endif
