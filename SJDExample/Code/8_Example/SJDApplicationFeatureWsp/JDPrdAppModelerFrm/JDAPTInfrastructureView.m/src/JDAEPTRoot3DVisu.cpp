// COPYRIGHT Dassault Systemes 2009
//===================================================================
//
// JDAEPTRoot3DVisu.cpp
// Provide implementation to interface
//    CATI3DGeoVisu
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//  Apr 2009  Creation: Code generated by the CAA wizard  LuJun
//===================================================================
#include "JDAEPTRoot3DVisu.h"
#include "JDAIPTRoot.h"
#include "CAT3DBagRep.h"
#include "JDAIPTRoot.h"

#include "iostream.h"


 
CATImplementClass(JDAEPTRoot3DVisu,
                  DataExtension,
                  CATExtIVisu,
                  JDAPTRoot );
 

//-----------------------------------------------------------------------------
// JDAEPTRoot3DVisu : constructor
//-----------------------------------------------------------------------------
JDAEPTRoot3DVisu::JDAEPTRoot3DVisu():
    CATExtIVisu()
{
}

//-----------------------------------------------------------------------------
// JDAEPTRoot3DVisu : destructor
//-----------------------------------------------------------------------------
JDAEPTRoot3DVisu::~JDAEPTRoot3DVisu()
{
}
 
// Link the implementation to its interface
// ---------------------------------------



//TIE or TIEchain definitions
#include "TIE_CATI3DGeoVisu.h"
TIE_CATI3DGeoVisu( JDAEPTRoot3DVisu);
CATRep * JDAEPTRoot3DVisu::BuildRep ()
{

	//cout <<"==> Now we are in JDAEPTRoot3DVisu::BuildRep  !" << endl;

	//Create a bag of reprepresentation
	CAT3DBagRep *pBag = new CAT3DBagRep();

	//Retrieve root
	JDAIPTRoot *piRoot = NULL;
	HRESULT hr;
	hr = this->QueryInterface(IID_JDAIPTRoot, (void**)&piRoot);

	CATListValCATBaseUnknown_var * pList = NULL;
	if (SUCCEEDED(hr) && (piRoot != NULL)) {
		hr = piRoot->GetChildren (IID_CATI3DGeoVisu, pList);
		piRoot->Release();
		piRoot = NULL;
	}
	else
		cout << "  ==> Get JDAIPTRoot error !" << endl;

	//Add children representation to the bag rep
	if (SUCCEEDED(hr) && (pList != NULL)) {
		//cout << "  ==> Get size of children: " << pList->Size() << endl;
		for (int i=1; i<=pList->Size(); i++) {
			CATI3DGeoVisu_var spVisu = (*pList)[i];
			CAT3DRep *aRep = (CAT3DRep*) spVisu->GetRep();
			if (aRep) {
				pBag->AddChild(*aRep);
			}  
		}
		delete pList; pList = NULL;
	}
	/*else
		cout << "  ==> GetChildren error ! " << endl;*/
	//cout <<"==> Now end JDAEPTRoot3DVisu::BuildRep  !" << endl;

	return pBag;

}


//Methods implementation

