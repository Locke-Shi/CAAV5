// COPYRIGHT Dassault Systemes 2009
//===================================================================
//
// JDAIPTMemo.h
// Define the JDAIPTMemo interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
//
//===================================================================
//
//  Apr 2009  Creation: Code generated by the CAA wizard  LuJun
//===================================================================
#ifndef JDAIPTMemo_H
#define JDAIPTMemo_H

#include "JDAPointItfCPP.h"
#include "CATBaseUnknown.h"

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByJDAPointItfCPP IID IID_JDAIPTMemo;
#else
extern "C" const IID IID_JDAIPTMemo ;
#endif

//------------------------------------------------------------------

/**
* Interface representing xxx.
*
* <br><b>Role</b>: Components that implement
* JDAIPTMemo are ...
* <p>
* Do not use the JDAIPTMemo interface for such and such

*
* @example
*  // example is optional
*  JDAIPTMemo* currentDisplay = NULL;
*  rc = window-&gt;QueryInterface(IID_JDAIPTMemo,
*                                     (void**) &amp;currentDisplay);
*
* @href ClassReference, Class#MethodReference, #InternalMethod...
*/
class ExportedByJDAPointItfCPP JDAIPTMemo: public CATBaseUnknown
{
  CATDeclareInterface;

  public:

	  virtual HRESULT GetX(double &oX) = 0;
	  virtual HRESULT SetX(double iX) = 0;
	  virtual HRESULT GetY(double &oY) = 0;
	  virtual HRESULT SetY(double iY) = 0;
	  virtual HRESULT GetZ(double &oZ) = 0;
	  virtual HRESULT SetZ(double iZ) = 0;

    /**
     * Remember that interfaces define only virtual pure methods.
     * Dont forget to document your methods.
     * <dl>
     * <dt><b>Example:</b>
     * <pre>
     *       
           *   MyFunction does this and that
           *   @param Arg1
           *      The first argument of MyFunction.
           *   @return
           *      Error code of function.
           * 
     * virtual int MyFunction (int Arg1) = 0;
     * </pre>
     * </dl>
     */

  // No constructors or destructors on this pure virtual base class
  // --------------------------------------------------------------
};

//------------------------------------------------------------------
CATDeclareHandler(JDAIPTMemo,CATBaseUnknown);
#endif
